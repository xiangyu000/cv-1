{"mappings":"AAAA,GAAG,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO;AACzC,GAAG,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAQ;AAC3C,GAAG,CAAC,MAAM,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDd;AACA,GAAG,CAAC,OAAO,GAAG,CAAE;AAChB,EAAsC,AAAtC,oCAAsC;AACtC,EAAkC,AAAlC,4EAA8E;AAClC,EAAgB,AAA5D,sKAAwK;AAC5D,GAAzG,CAAC,CAAC,GAAG,CAAC;AAGT,GAAG,CAAC,IAAI,OAAS,CAAC;IACd,UAAU,KAAO,CAAC;QACd,OAAO,IAAI,MAAM,CAAC,CAAC,MAAM,CAAI,MAAG,CAAM,QAAG,MAAM,CAAC,CAAC;QACjD,EAA0D,AAA1D,8EAAgF;QAC1D,EAAe,AAArC,uEAAqC;QACrC,IAAI,CAAC,SAAS,GAAG,OAAO;QACxB,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC;QACvC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK;QACxB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,KAAK;QACrB,CAAC;QAED,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EACjB,IAAI;IAGZ,CAAC,EAAE,EAAE;AACT,CAAC;AACD,IAAI","sources":["src/main.js"],"sourcesContent":["let html = document.querySelector('#demo');\r\nlet style = document.querySelector('#style');\r\nlet string = `\r\n/*你好，我是一名前端新人,\r\n *接下来，我要练习一些技巧\r\n *先画个太极图\r\n *第一步先用div画个圆\r\n**/\r\n#div1{\r\n    border:1px solid red;\r\n    width:200px;\r\n    height:200px;\r\n    border-radius:50%;\r\n}\r\n/*\r\n *接下来，要把这个圆分割阴阳两半\r\n**/\r\n#div1{\r\n    box-shadow:0,0,3px,rgba(0,0,0,0.5);\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/*\r\n *加上两个小圆，构造阴阳鱼的轮廓\r\n**/\r\n#div1::before{\r\n    content:'';\r\n    display:block;\r\n    border-radius:50%;\r\n    width:100px;\r\n    height:100px;\r\n    bottom:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    position:relative;\r\n    background:#000000;\r\n}\r\n#div1::after{\r\n    content:'';\r\n    display:block;\r\n    border-radius:50%;\r\n    width:100px;\r\n    height:100px;\r\n    top:0;\r\n    left:50%;\r\n    transform:translateX(-50%);\r\n    position:relative;\r\n    background:#ffffff;\r\n}\r\n/*\r\n *然后填充颜色\r\n**/\r\n#div1::before{\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\r\n}\r\n\r\n`;\r\nlet string2 = '';\r\n//string=string.replace(/\\n/g,'<br>');\r\n//replace()方法只会把第一个字符替换,这里要结合正则表达式\r\n//转化得到的<br>标签，在屏幕输出时，会逐个字符输出，而不是作为整体，只有整个标签输出完成后，才会在屏幕上转化为换行\r\nlet n = 0;\r\n\r\n\r\nlet step = () => {\r\n    setTimeout(() => {\r\n        string2 += string[n] === '\\n' ? '<br>' : string[n];\r\n        //demo.innerHTML=string.substring(0,n); 这句废弃，引进string2实现功能\r\n        //引进string2，用来重新拼接innerHTML的元素，避免<的出现\r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        window.scrollTo(0, 99999);\r\n        html.scrollTo(0,99999);\r\n        n++;\r\n\r\n        if (n < string.length) {\r\n            step();\r\n        } else {\r\n        }\r\n    }, 40);\r\n};\r\nstep();"],"names":[],"version":3,"file":"index.65c7a1e5.js.map","sourceRoot":"/__parcel_source_root/"}